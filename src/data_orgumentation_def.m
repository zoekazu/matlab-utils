function data_orgumentation_def()

BriValue = [0,5,10,-5,-10];
data_orgumentation(BriValue);

end

function data_orgumentation(BriValue)

imgFileLocation_ori = 'xxx/';
imgFileList_ori = dir('xxx/*.bmp');
imgNum_ori = size(imgFileList_ori);
imgFileNameList_ori = cell(imgNum_ori);

for i = 1 : imgNum_ori(1)
    imgFileName_ori = char(imgFileList_ori(i).name);
    imgFileNameList_ori{i} = sprintf('%s%s', imgFileLocation_ori, imgFileName_ori);
end

base_dir = 'xxx';

folder_name_seg = 'Segmentaion_image';
folder_name_org = 'orgumentation_image';

if ~exist(sprintf('%s/%s', base_dir, folder_name_org), 'dir')
    mkdir(sprintf('%s/%s', base_dir, folder_name_org));
end

if ~exist(sprintf('%s/%s', base_dir, folder_name_seg), 'dir')
    mkdir(sprintf('%s/%s', base_dir, folder_name_seg));
end

for data = 1:length(imgFileNameList_ori)
    img_path_ori = char(imgFileNameList_ori(data));
    im_ori  = imread(img_path_ori);

    for k = 1: length(BriValue)
        im = im_ori;
        im_seg = segmentImage(im_ori);

         for j = 1:numel(im_ori)
            if im_seg(j) == 0
                im(j) = im_ori(j) + BriValue(k);
            end
         end

        image_name = strrep(img_path_ori, imgFileLocation_ori, '');
        image_name = strrep(image_name, '.bmp', '');

        if BriValue(k) > 0
            ValName = sprintf("P%d", BriValue(k));
        elseif BriValue(k) < 0
            val = extractAfter(num2str(BriValue(k)),"-");
            ValName = sprintf("M%s",val);
        else
            ValName = num2str(BriValue(k));
        end
        seg_name = sprintf('%s/%s/%s_seg.bmp', base_dir, folder_name_seg, image_name);
        im_name = sprintf('%s/%s/%s_bri%s.bmp', base_dir, folder_name_org, image_name,ValName);
        imwrite(im_seg, seg_name);
        imwrite(im, im_name);

    end
end
end

function [BW,maskedImage] = segmentImage(X)
%segmentImage Segment image using auto-generated code from imageSegmenter App
%  [BW,MASKEDIMAGE] = segmentImage(X) segments image X using auto-generated
%  code from the imageSegmenter App. The final segmentation is returned in
%  BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 18-May-2018
%----------------------------------------------------


% Create empty mask.
BW = false(size(X,1),size(X,2));

BW = X > 190;

% Create masked image.
maskedImage = X;
maskedImage(~BW) = 0;
end